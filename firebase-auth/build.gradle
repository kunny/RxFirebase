apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dexOptions {
        preDexLibraries = !rootProject.ext.ci
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        test.java.srcDirs += 'src/test/kotlin'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation project(":firebase-core")

    compileOnly "com.google.auto.value:auto-value:${autoValueVersion}"
    compileOnly "com.google.firebase:firebase-auth:${firebaseAuthVersion}"
    compileOnly "io.reactivex.rxjava3:rxjava:${rxJavaVersion}"

    annotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"

    testImplementation "com.google.firebase:firebase-auth:${firebaseAuthVersion}"
    testImplementation "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
    testImplementation "junit:junit:${junitVersion}"
    testImplementation "io.reactivex.rxjava3:rxjava:${rxJavaVersion}"
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
}

apply from: rootProject.file('gradle/gradle-mvn-local.gradle')
apply from: rootProject.file('gradle/gradle-mvn-push.gradle')

apply plugin: 'com.google.android.gms.strict-version-matcher-plugin'
